package com.testing.hello;

import java.awt.*;
import java.util.Arrays;
import java.util.Scanner;

import static java.lang.System.out;

public class Hello {
    public static void returnArray(int[] array){
        int take = array.length-1;
        int[] array2 = new int[array.length];
        for (int i=0;i<array.length;i++){

            array2[i] = array[take-i];

            /** My concept was wrong because I want to reverse array something like this
             * array[4] = {1,2,3,4} indexes are {0,1,2,3}
             * My concept is - I'll explain my concept in term's of set form
             *
             * indexes - (array,myLogic) ->
             * (0,3)
             * (1,2)
             * (2,1)
             * (3,0)
             * What I'm doing is array[i] = array[take-i]; means where I'm assigning and where I'm performing my operation are in same array
             * which is wrong because you're actually assigning but also modifying actual array. But funny thing is you can get palindrome with using
             * that concept. But only array size/2 portion of the array. Like
             *
             * array[1,2,3,4] you'll get 4,3,3,4 that's it If I talk about this than it will go on and on.
             **/
        }
        for (int i=0;i< array2.length;i++){
            System.out.print(array2[i]+" ");
        }
    }
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int arrayAmount = scan.nextInt();
        int[] array = new int[arrayAmount];
        for(int i=0;i<arrayAmount;i++){
            array[i] = scan.nextInt();
        }
        returnArray(array);
    }
}
